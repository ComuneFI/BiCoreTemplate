<?xml version="1.0" encoding="UTF-8"?>

<project name="BiCoreTemplate" default="build">
    
    <target name="build" depends="prepare,
                    composer-self-update,
                    composer-run-install,
                    bicorebundle-drop-database,
                    bicorebundle-install,
                    bicoredemo-loaddefaultdata,
                    php-security-checker, 
                    phpunit-ci,
                    finish">
    </target>
    
    <target name="clean" description="Cleanup build">
        <delete dir="build/artifacts/coverage"/>
        <delete dir="build/artifacts/logs"/>
        <delete file="cache.properties"/>
        <delete file="composer.phar"/>
    </target>

    <target name="finish" description="Cleanup">
        <delete file="cache.properties"/>
        <delete file="composer.phar"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="build/artifacts/coverage"/>
        <mkdir dir="build/artifacts/logs"/>
    </target>

    <target name="check-composer">
        <available file="composer.phar" property="composer.installed"/>
    </target>

    <target name="composer-install" depends="check-composer" unless="composer.installed">
        <get src="https://getcomposer.org/composer.phar" dest="composer.phar"/>
    </target>

    <target name="composer-self-update" depends="composer-install">
        <exec executable="php" failonerror="true">
            <arg line="composer.phar self-update"/>
        </exec>
    </target>

    <target name="composer-run-install" depends="composer-self-update">
        <exec executable="php" failonerror="true">
            <arg line="composer.phar install"/>
        </exec>
    </target>
  
    <target name="bicorebundle-drop-database">
        <exec executable="php" failonerror="true">
            <arg line="bin/console bicorebundle:dropdatabase --force"/>
        </exec>
    </target>
    
    <target name="bicorebundle-install">
        <exec executable="php" failonerror="true">
            <arg line="bin/console bicorebundle:install admin admin admin@admin.it"/>
        </exec>
    </target>
    <target name="bicoredemo-loaddefaultdata">
        <exec executable="php" failonerror="true">
            <arg line="bin/console bicoredemo:loaddefauldata"/>
        </exec>
    </target>
  
    <target name="get-changeset.php.raw"
            description="creates a list of changed php files separated by newline">
        <pathconvert property="changeset.php.raw" pathsep="${line.separator}">
            <fileset dir="src">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
        </pathconvert>

        <!--Check if files are modified-->
        <condition property="changeset.php.notempty">
            <not>
                <equals arg1="${changeset.php.raw}" arg2="" trim="true"/>
            </not>
        </condition>
    </target>

    <target name="get-changeset.php.spacesep" depends="get-changeset.php.raw" if="changeset.php.notempty"
            description="Creates a quoted list of changed php files separated by spaces">
        <loadresource property="changeset.php.spacesep">
            <propertyresource name="changeset.php.raw"/>
            <filterchain>
                <tokenfilter delimoutput=" ">
                    <linetokenizer/>
                    <replaceregex pattern="^" replace='"'/>
                    <replaceregex pattern="$" replace='"'/>
                </tokenfilter>
            </filterchain>
        </loadresource>
    </target>

    <target name="php-lint-ci" depends="get-changeset.php.spacesep" if="changeset.php.notempty"
            description="Perform syntax check of sourcecode files in parallel">
        <exec executable="sh" failonerror="true">
            <arg value="-c"/>
            <arg value="echo '${changeset.php.spacesep}' | xargs -n 1 -P 4 php -l 1>/dev/null"/>
        </exec>
    </target>

    <target name="php-security-checker" description="Check your composer dependencies for insecure components">
        <exec executable="vendor/bin/security-checker" failonerror="false">
            <arg value="security:check"/>
            <arg value="--verbose"/>
            <arg value="--end-point=http://security.sensiolabs.org/check_lock"/>            
            <arg value="composer.lock"/>
        </exec>
    </target>

    <target name="phpunit-ci" description="Run unit tests with PHPUnit">
        <exec executable="vendor/bin/simple-phpunit" failonerror="true">
            <env key="PANTHER_WEB_SERVER_DIR" value="${basedir}/tests/public"/>
            <env key="PANTHER_NO_HEADLESS" value="0"/>
            <arg line="--configuration=${basedir}/tools/phpunit/phpunit.xml.dist"/>
            <arg line="--coverage-clover=${basedir}/build/artifacts/coverage/clover.xml"/>
        </exec>
    </target>
</project>
